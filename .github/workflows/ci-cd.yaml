name: Deploy to EKS

on:
  push:
    branches:
      - main  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI and configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} 

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Step 4: Build and push the backend Docker image to ECR
      # - name: Build, tag, and push backend image
      #   run: |
      #     docker build -t backend:${{ github.sha }} ./backend
      #     docker tag backend:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-eks-deploy-pod-detail-app-backend:${{ github.sha }}
      #     docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-eks-deploy-pod-detail-app-backend:${{ github.sha }}
      
      # Step 4: Build and push the backend Docker image to ECR
      - name: Build, tag, and push backend image
        run: |
           docker build -t backend:${{ github.sha }} ./backend
           docker tag backend:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-eks-deploy-pod-detail-app-backend:${{ github.sha }}
           docker tag backend:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-eks-deploy-pod-detail-app-backend:latest
           docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-eks-deploy-pod-detail-app-backend:${{ github.sha }}
           docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-eks-deploy-pod-detail-app-backend:latest

      # Step 5: Build and push the frontend Docker image to ECR
      - name: Build, tag, and push frontend image
        run: |
          docker build -t frontend:${{ github.sha }} ./frontend
          docker tag frontend:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-eks-deploy-pod-detail-app-frontend:${{ github.sha }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-eks-deploy-pod-detail-app-frontend:${{ github.sha }}
 
  deploy:
    needs: build
    runs-on: ubuntu-latest

    # Define the steps to be executed in the job
    steps:
    # Checkout the repository to access source code
      - name: Checkout repository
        uses: actions/checkout@v2

     # Set up kubectl with the specified version
      - uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.1' # default is latest stable
        id: install

    # Step 2: Set up AWS CLI and configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} 


    # Authenticate Docker with Amazon ECR using AWS credentials
      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    # Replace the tag in deployment.yaml with the GitHub SHA
      - name: Replace the tag in deployment.yaml
        run: sed -i "s|${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.ECR_REPO_NAME_BACKEND }}:latest|${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.ECR_REPO_NAME_BACKEND }}:${{ github.sha }}|" ./kubernetes/backend-deployment.yaml
    
    # Replace the tag in deployment.yaml with the GitHub SHA
      - name: Replace the tag in deployment.yaml
        run: sed -i "s|${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.ECR_REPO_NAME_FRONTEND }}:latest|${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.ECR_REPO_NAME_FRONTEND }}:${{ github.sha }}|" ./kubernetes/frontend-deployment.yaml

    # Configure kubectl for the specified EKS cluster
      - name: Configure kubectl for EKS
        run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

    # Deploy the application to EKS using deployment.yaml and service.yaml
      - name: Deploy to EKS backend
        run: |
         kubectl apply -f ./kubernetes/backend-deployment.yaml 
         kubectl apply -f ./kubernetes/backend-service.yaml

     # Deploy the application to EKS using deployment.yaml and service.yaml
      - name: Deploy to EKS frontend
        run: |
         kubectl apply -f ./kubernetes/frontend-deployment.yaml 
         kubectl apply -f ./kubernetes/frontend-service.yaml

     # Deploy the application to EKS using deployment.yaml and service.yaml
      - name: Deploy to EKS nginx
        run: |
         kubectl apply -f ./kubernetes/nginx-deployment.yaml 
         kubectl apply -f ./kubernetes/nginx-service.yaml



